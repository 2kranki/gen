// vi:nu:et:sts=4 ts=4 sw=4
// See License.txt in main repository directory

// io[[.TD.Data.TitledName]] contains all the functions
// and data to interact with the SQL Database.

// Generated: [[Time]]
[[- $dot := .]]
[[- $d  := .TD.Data]]
[[- $dn := .TD.Data.TitledName]]
[[- $plg := $d.Plugin.Plugin]]
[[- $typ := $plg.Name]]
[[- $t  := .Table]]
[[- $tn := .Table.TitledName]]

package [[$dn]][[$tn]]

import (
	"testing"
)

//============================================================================
//                              Tests
//============================================================================

func TestTestData(t *testing.T) {
    var chr         rune
    var str         string
    var i64         int64
    [[ if $t.HasFloat -]]
        var f64         float64
    [[- end ]]

    t.Logf("Test.TestData()...\n")
    i64 = 1
    [[ if $t.HasFloat -]]
        f64 = float64(i64)
    [[- end ]]
    chr = rune(i64 + 65)
    str = string(chr)
    t.Logf("\t i64 = %d\n", i64)
    t.Logf("\t chr = %c\n", chr)
    t.Logf("\t str = (%d)%s\n", len(str), str)

    rcd := [[$tn]]New()
    if rcd == nil {
        t.Fatalf("Error: Could not create rcd!\n\n\n")
    }
    rcd.TestData(1)

    [[range $f := $t.Fields]]
        [[if $f.IsText]]
            if rcd.[[$f.TitledName]] != string(chr) {
                t.Fatalf("Error: Invalid data for rcd.[[$f.TitledName]] of (%d)%s!\n\n\n",
                                    len(rcd.[[$f.TitledName]]), rcd.[[$f.TitledName]])
            }
        [[else if $f.IsInteger]]
            [[ if $f.Incr ]]
                if rcd.[[$f.TitledName]] != i64+1 {
                    t.Fatalf("Error: Invalid data for rcd.[[$f.TitledName]] of %d!\n\n\n", rcd.[[$f.TitledName]])
                }
            [[ else ]]
                if rcd.[[$f.TitledName]] != i64 {
                    t.Fatalf("Error: Invalid data for rcd.[[$f.TitledName]] of %d!\n\n\n", rcd.[[$f.TitledName]])
                }
            [[ end ]]
        [[else if $f.IsFloat]]
            if rcd.[[$f.TitledName]] != f64 {
                t.Fatalf("Error: Invalid data for rcd.[[$f.TitledName]] of %f!\n\n\n", rcd.[[$f.TitledName]])
            }
        [[end]]
    [[end]]


    t.Logf("Test.TestData() - End of Test\n\n\n")
}

