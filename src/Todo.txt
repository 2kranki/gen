* Clean up when done:
    * unneeded files
    * write any extra needed documentation

* GenSqlApp:
    * main.go
        * Customize parameters for sqlite indicating the database file path is
          to be supplied by the dbServer parameter.
    * Main Menu Generation
        * Allow file path to be selected for Load and Save CSV
        * make it prettier lol
        * possibly convert to form ???
    * Form Generation:
        * Field order and display grouping (JSON indicated)
        * Field Alignment - if it can not be done easily, add comment for it
            to be done by hand
        * Field Length in Form
        * CSS or Table
        * Add button to get to list mode ???
        * All HTML forms need to be converted to using html/template and they should
            only have data added no html codes ???
    * table handler
        * Do csv save handler
        * tablehndlr.go
        * form.html per table
            * Try to do all the single record stuff in one form
            * Add ability to switch back to list form or main menu from this record
        * tablelist.html per table
            * Allow some selection criteria
            * generate switch to single record mode and back
            * when switching to list start at the record that you were at in Maintenance
    * table I/O
        * tableio.go - change to <database_name>DB so that we can have
        * several db's per JSON definition
    * If we included the field/table tables in doPkg in the io package, we might be
        able to generate a more table-driven application that required less code generation.
* possibly json to struct converter and vice versa
* Check into for possible inclusion:
    * https://github.com/gorilla/mux
    * https://github.com/gin-gonic/gin
    * https://github.com/volatiletech/openapi-generator
    * https://github.com/volatiletech/sqlboiler

